name: Deploy Docker Image to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push MySQL image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my_db
          IMAGE_TAG: v1
        run: |
          echo "Building MySQL image..."
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
          # unit test
          docker run -d --name mydb -e MYSQL_ROOT_PASSWORD=pw $REGISTRY/my_db:v1
          docker inspect mydb
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push WebServer image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my_app
          IMAGE_TAG: v1
        run: |
          # apt-get install curl -y
          echo "Building Webserver image..."
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile .

          # unit test
          export DBHOST=172.17.0.2
          export DBPORT=3306
          export DBUSER=root
          export DATABASE=employees
          export DBPWD=pw

          docker run -d -p 8081:8080 --name myapp -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e DBUSER=$DBUSER -e DBPWD=$DBPWD $REGISTRY/my_app:v1
          docker ps
          echo "Pause for 10 seconds to let container start"
          sleep 10
          docker logs myapp
          curl localhost:8081 -vvv
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
